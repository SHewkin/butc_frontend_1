{"version":3,"sources":["store/initial_data/iniitalState.js","store/utilities.js","store/reducers/reducer_logic/H2H_Mappings.js","store/reducers/reducer_logic/h2h_logic.js","store/reducers/reducer_logic/seedingScoring.js","store/reducers/reducer.js","store/actions/actionTypes.js","components/universities/university/EditableUniversityList.js","store/actions/actions.js","store/database_logic.js","components/universities/UniversityDashboard.js","settings.js","components/TargetLists/EditableTargetList.js","components/TargetLists/TargetListDashboard.js","components/seedingScoring/scoringViews/universityScores.js","components/seedingScoring/scoringViews/individualScores.js","components/H2H/target_lists/h2hTargetsR1A.js","components/H2H/target_lists/h2hTargetsR1B.js","components/H2H/target_lists/h2hTargetsR2.js","components/H2H/target_lists/h2hTargetsQF.js","components/H2H/target_lists/h2hTargetsSF.js","components/H2H/target_lists/h2hTargetsMB.js","components/H2H/target_lists/h2hTargetsMG.js","components/H2H/score_views/h2hScoreViewR1A.js","components/H2H/score_views/h2hScoreViewR1B.js","components/H2H/score_views/h2hScoreViewR2.js","components/H2H/score_views/h2hScoreViewQF.js","components/H2H/score_views/h2hScoreViewSF.js","components/H2H/score_views/h2hScoreViewMB.js","components/H2H/score_views/h2hScoreViewMG.js","components/homepage.js","components/Navigation/NavBar.js","App.js","registerServiceWorker.js","index.js","assets/BUTC_Logo.svg"],"names":["initialState","activeItem","last_university_id","num_targets","universities","universityScoreList","individualScoreList","targets","number","position","getSum","values","reduce","sum","value","count","target","counts","key","R1Mapping","1","round","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","calculateH2HScores","map","university","index","totalEndsScore","h2hScoring","ends","totalShootOffScore","shootOff","totalScore","cleanArrows","arrows","cleanedArrows","push","calculateScores","console","log","archerScores","uni_index","archers","archer","archer_index","overallScore","hits","numXs","num10s","num9s","num8s","num7s","num6s","num5s","num4s","num3s","num2s","num1s","rankingScore","seedingScore","length","id","calculateArcherScores","teamSeedingScore","overallHits","overallXs","overallRankingScore","calculateUniversityScores","sort","a","b","overallRank","rankUniversities","rank","assignTargets","rank_archers","first_name","surname","returnUniversitiesState","state","action","Object","objectSpread","data","error","reducer","arguments","undefined","type","new_university_id","concat","name","addUniversity","keys","toConsumableArray","action_keys","updateUniversity","updateScores","updateH2HRound","returnUniversityScoreList","returnIndividualScoreList","EditableUniversityList","this","props","react_default","createElement","Table","className","Header","HeaderCell","Body","Row","Cell","data-label","gender","experience","React","Component","saveResult","action_type","res","API","initialiseUniversities","dispatch","fetch","then","response","json","batchColumnValues","valueRanges","parsed_university","JSON","parse","validated_university","end_key","end_index","arrow","arrow_index","getData","UniversityDashboard","_this","onInitialiseUniversities","university_EditableUniversityList","onFormSubmit","handleEditFormSubmit","connect","uni","onUniAdded","setTimeout","onUniEdited","EditableTargetList","_","require","TargetListDashboard","handleRandomNumberGeneration","array_len","new_universities","target_numbers","i","random","includes","setState","attrs","onSaveUniversities","TargetLists_EditableTargetList","UniversityScores","university_rows","score","golds","sortBy","getUniversityScoreList","IndividualScores","team","Hits","getIndividualScoreList","H2HTargetR1A","current_round","round_description","round_mapping","R1A","R1B","R2","QF","SF","MB","MG","handleRoundChange","_this2","R1","e","universityTargets","H2HTargetR1B","H2HTargetR2","H2HTargetQF","H2HTargetSF","H2HTargetMB","H2HTargetsMG","H2HScoreViewR1A","total","colSpan","H2HScoreViewR1B","H2HScoreViewR2","H2HScoreViewQF","H2HScoreViewSF","H2HScoreViewMB","H2HScoreViewMG","Homepage","year","Date","getFullYear","src","logo","alt","NavBar","Menu","size","Item","active","onClick","handleItemClick","as","NavLink","to","Dropdown","item","simple","text","Switch","Route","exact","path","component","components_homepage","universities_UniversityDashboard","TargetLists_TargetListDashboard","scoringViews_universityScores","scoringViews_individualScores","target_lists_h2hTargetsR1A","target_lists_h2hTargetsR1B","target_lists_h2hTargetsR2","target_lists_h2hTargetsQF","target_lists_h2hTargetsSF","target_lists_h2hTargetsMB","target_lists_h2hTargetsMG","score_views_h2hScoreViewR1A","score_views_h2hScoreViewR1B","score_views_h2hScoreViewR2","score_views_h2hScoreViewQF","score_views_h2hScoreViewSF","score_views_h2hScoreViewMB","score_views_h2hScoreViewMG","App","_ref","setInterval","forceUpdate","bind","HashRouter","Navigation_NavBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","result","getState","thunk","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.503209f3.chunk.js","sourcesContent":["// import {universities} from './initial_universities_anonymous';\r\n\r\nconst initialState = {\r\n    activeItem: 'home',\r\n    last_university_id: 2,\r\n    num_targets: 16,\r\n    universities: null,\r\n    universityScoreList: null,\r\n    individualScoreList: null,\r\n    targets: [\r\n        { number: 1, position: 'top' },\r\n        { number: 1, position: 'bottom' },\r\n        { number: 2, position: 'top' },\r\n        { number: 2, position: 'bottom' },\r\n        { number: 3, position: 'top' },\r\n        { number: 3, position: 'bottom' },\r\n        { number: 4, position: 'top' },\r\n        { number: 4, position: 'bottom' },\r\n        { number: 5, position: 'top' },\r\n        { number: 5, position: 'bottom' },\r\n        { number: 6, position: 'top' },\r\n        { number: 6, position: 'bottom' },\r\n        { number: 7, position: 'top' },\r\n        { number: 7, position: 'bottom' },\r\n        { number: 8, position: 'top' },\r\n        { number: 8, position: 'bottom' },\r\n        { number: 9, position: 'top' },\r\n        { number: 9, position: 'bottom' },\r\n        { number: 10, position: 'top' },\r\n        { number: 10, position: 'bottom' },\r\n        { number: 11, position: 'top' },\r\n        { number: 11, position: 'bottom' },\r\n        { number: 12, position: 'top' },\r\n        { number: 12, position: 'bottom' },\r\n        { number: 13, position: 'top' },\r\n        { number: 13, position: 'bottom' },\r\n        { number: 14, position: 'top' },\r\n        { number: 14, position: 'bottom' },\r\n        { number: 15, position: 'top' },\r\n        { number: 15, position: 'bottom' },\r\n        { number: 16, position: 'top' },\r\n        { number: 16, position: 'bottom' }\r\n    ]\r\n};\r\n\r\nexport default initialState;","\r\nexport function isEmpty(obj) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function getSum(values) {\r\n    return values.reduce(function (sum, value) {\r\n        return sum + value;\r\n    }, 0);\r\n}\r\n\r\nexport function count(values, target) {\r\n    var counts = 0\r\n    for (var key in values) {\r\n        if (values[key] === target) {\r\n            counts += 1\r\n        }\r\n    }\r\n    return counts\r\n}\r\n","// Mapping qualifying scores to targets\r\n\r\nexport const R1Mapping = {\r\n    1: { number: 1, round: 'A' },\r\n    2: { number: 16, round: 'B' },\r\n\r\n    3: { number: 1, round: 'B' },\r\n    4: { number: 16, round: 'A' },\r\n\r\n    5: { number: 9, round: 'A' },\r\n    6: { number: 8, round: 'B' },\r\n\r\n    7: { number: 9, round: 'B' },\r\n    8: { number: 8, round: 'A' },\r\n\r\n    9: { number: 5, round: 'A' },\r\n    10: { number: 12, round: 'B' },\r\n\r\n    11: { number: 5, round: 'B' },\r\n    12: { number: 12, round: 'A' },\r\n\r\n    13: { number: 13, round: 'A' },\r\n    14: { number: 4, round: 'B' },\r\n\r\n    15: { number: 13, round: 'B' },\r\n    16: { number: 4, round: 'A' },\r\n\r\n    17: { number: 3, round: 'A' },\r\n    18: { number: 14, round: 'B' },\r\n\r\n    19: { number: 3, round: 'B' },\r\n    20: { number: 14, round: 'A' },\r\n\r\n    21: { number: 11, round: 'A' },\r\n    22: { number: 6, round: 'B' },\r\n\r\n    23: { number: 11, round: 'B' },\r\n    24: { number: 6, round: 'A' },\r\n\r\n    25: { number: 7, round: 'A' },\r\n    26: { number: 10, round: 'B' },\r\n\r\n    27: { number: 7, round: 'B' },\r\n    28: { number: 10, round: 'A' },\r\n\r\n    29: { number: 15, round: 'A' },\r\n    30: { number: 2, round: 'B' },\r\n\r\n    31: { number: 15, round: 'B' },\r\n    32: { number: 2, round: 'A' }\r\n\r\n}\r\n\r\n// maps assigned targets to scoring target\r\n// Target num (irrelevant of A/B) : Scoring Target Num\r\nexport const scoringMapping = {\r\n    1: 1,\r\n    2: 1,\r\n    3: 2,\r\n    4: 2,\r\n    5: 3,\r\n    6: 3,\r\n    7: 4,\r\n    8: 4,\r\n    9: 5,\r\n    10: 5,\r\n    11: 6,\r\n    12: 6,\r\n    13: 7,\r\n    14: 7,\r\n    15: 8,\r\n    16: 8\r\n}\r\n\r\n// Maps current target to next target, from R1 to which target should be used for the medal matches\r\nexport const h2hTargetMapping = {\r\n    R1: {\r\n        1: 1,\r\n        2: 1,\r\n        3: 2,\r\n        4: 2,\r\n        5: 3,\r\n        6: 3,\r\n        7: 4,\r\n        8: 4,\r\n        9: 5,\r\n        10: 5,\r\n        11: 6,\r\n        12: 6,\r\n        13: 7,\r\n        14: 7,\r\n        15: 8,\r\n        16: 8,\r\n        17: 9,\r\n        18: 9,\r\n        19: 10,\r\n        20: 10,\r\n        21: 11,\r\n        22: 11,\r\n        23: 12,\r\n        24: 12,\r\n        25: 13,\r\n        26: 13,\r\n        27: 14,\r\n        28: 14,\r\n        29: 15,\r\n        30: 15,\r\n        31: 16,\r\n        32: 16,\r\n    },\r\n    R2: {\r\n        1: 5,\r\n        2: 5,\r\n        3: 6,\r\n        4: 6,\r\n        5: 7,\r\n        6: 7,\r\n        7: 8,\r\n        8: 8,\r\n        9: 9,\r\n        10: 9,\r\n        11: 10,\r\n        12: 10,\r\n        13: 11,\r\n        14: 11,\r\n        15: 12,\r\n        16: 12\r\n    },\r\n    QF: {\r\n        5: 7,\r\n        6: 7,\r\n        7: 8,\r\n        8: 8,\r\n        9: 9,\r\n        10: 9,\r\n        11: 10,\r\n        12: 10\r\n    },\r\n    SF: {\r\n        7: 9,\r\n        8: 8,\r\n        9: 9,\r\n        10: 9\r\n    }\r\n}\r\n\r\n","import { R1Mapping, h2hTargetMapping} from './H2H_Mappings';\r\nimport { getSum } from '../../utilities';\r\n\r\n// round abbreviations (must be uppercase):\r\n// R1: Round 1 (parts A and B)\r\n// R2: Round 2\r\n// QF: Quarter Finals\r\n// SF: Semi Finals\r\n// MB: Bronze medal match\r\n// MG: Gold medal match\r\n\r\nexport function assignTargets(universities, round) {\r\n    console.log('inside assign targets')\r\n    console.log(universities)\r\n    universities.map((university, index) => {\r\n        var rank = university.teamSeedingScore.overallRank\r\n        universities[index].h2hScoring[round].target = R1Mapping[rank]\r\n\r\n    })\r\n    return universities\r\n}\r\n\r\nexport function assignScoringTargets(universities, round) {\r\n\r\n    // special case for round 1 where there are two rounds, A and B\r\n    universities.map((university, index) => {\r\n        var target = null\r\n        if (round === 'R1') {\r\n            target = university.h2hScoring[round].target.number\r\n        } else {\r\n            target = university.h2hScoring[round].target\r\n        }\r\n\r\n        universities[index].h2hScoring[round].scoringTarget = h2hTargetMapping.round[target]\r\n        console.log(universities[index].h2hScoring[round].scoringTarget = h2hTargetMapping.round[target])\r\n    })\r\n    return universities\r\n}\r\n\r\nexport function calculateH2HScores(universities, round) {\r\n    // map all univerisities and calculate total end and total shoot off scores\r\n    universities.map((university, index) => {\r\n        var totalEndsScore = getSum(university.h2hScoring[round].ends)\r\n        var totalShootOffScore = getSum(university.h2hScoring[round].shootOff)\r\n\r\n        universities[index].h2hScoring[round].totalEndsScore = totalEndsScore\r\n        universities[index].h2hScoring[round].totalShootOffScore = totalShootOffScore\r\n        universities[index].h2hScoring[round].totalScore = totalEndsScore + totalShootOffScore\r\n    })\r\n\r\n    // group universities by scoring target and work out which of the two is currently winning\r\n    // if a draw indicate a shoot off is required\r\n\r\n    // scoringMapping.map((scoringTarget, index) => {\r\n    //     if (round == 'R1') {\r\n    //         targetUniversities = universities.find(key => key.h2hScoring[round].scoringTarget === scoringTarget)\r\n    //         if (targetUniversities !== undefined) {\r\n    //             targetUniversities.\r\n    //         }\r\n    //     } else {\r\n\r\n    //     }\r\n    // })\r\n\r\n    return universities\r\n\r\n}","import { count, getSum } from '../../utilities';\r\nimport { assignTargets } from './h2h_logic';\r\n\r\nfunction cleanArrows(arrows) {\r\n    var cleanedArrows = []\r\n    for (var key in arrows) {\r\n        if (arrows[key] === 'M') {\r\n            cleanedArrows.push(0)\r\n        } else if (arrows[key] === 'X') {\r\n            cleanedArrows.push(10)\r\n        } else {\r\n            cleanedArrows.push(arrows[key])\r\n        }\r\n    }\r\n\r\n    return cleanedArrows\r\n}\r\n\r\nexport function calculateScores(universities) {\r\n    // seeding score wrapper for updateScores reducer.js\r\n\r\n    console.log('calculating archer scores')\r\n    universities = calculateArcherScores(universities)\r\n    console.log(universities)\r\n\r\n    console.log('calculatingUniversityScores')\r\n    universities = calculateUniversityScores(universities)\r\n    console.log(universities)\r\n\r\n    console.log('ranking universities')\r\n    universities = rankUniversities(universities)\r\n    console.log(universities)\r\n\r\n    console.log('assigning H2H r1 targets')\r\n    universities = assignTargets(universities, \"R1\")\r\n    console.log(universities)\r\n\r\n    return universities\r\n}\r\n\r\nexport function calculateArcherScores(universities) {\r\n    console.log('inside calculateArcherScores')\r\n    const archerScores = []\r\n    // May need to restructure data in order to reduce the number of loops\r\n    universities.map((university, uni_index) => {\r\n        university.archers.map((archer, archer_index) => {\r\n            var overallScore = 0\r\n            var hits = 0\r\n            var numXs = 0\r\n            var num10s = 0\r\n            var num9s = 0\r\n            var num8s = 0\r\n            var num7s = 0\r\n            var num6s = 0\r\n            var num5s = 0\r\n            var num4s = 0\r\n            var num3s = 0\r\n            var num2s = 0\r\n            var num1s = 0\r\n            var rankingScore = 0\r\n\r\n            // Calculate scores\r\n            const arrows = archer.seedingScore.arrows\r\n            console.log(arrows)\r\n            for (var key in arrows) {\r\n                if (key > 0) { //temporary fix until seeding scoring targets are redesigned\r\n                    overallScore = overallScore + getSum(cleanArrows(arrows[key]))\r\n                    hits = hits + (arrows[key].length - count(arrows[key], 'M'))\r\n                    numXs = numXs + count(arrows[key], 'X')\r\n                    num10s = num10s + count(arrows[key], 10)\r\n                    num9s = num9s + count(arrows[key], 9)\r\n                    num8s = num9s + count(arrows[key], 8)\r\n                    num7s = num9s + count(arrows[key], 7)\r\n                    num6s = num9s + count(arrows[key], 6)\r\n                    num5s = num9s + count(arrows[key], 5)\r\n                    num4s = num9s + count(arrows[key], 4)\r\n                    num3s = num9s + count(arrows[key], 3)\r\n                    num2s = num9s + count(arrows[key], 2)\r\n                    num1s = num9s + count(arrows[key], 1)\r\n\r\n                    rankingScore = overallScore + (numXs * 1e-2) + (num10s * 1e-3) + (num9s * 1e-4) + (num8s * 1e-5) + (num7s * 1e-6) + (num6s * 1e-7) + (num5s * 1e-8) + (num4s * 1e-9) + (num3s * 1e-10) + (num2s * 1e-11) + (num1s * 1e-12)\r\n                }\r\n            }\r\n\r\n            universities[uni_index].archers[archer_index].seedingScore.rankingScore = rankingScore\r\n            universities[uni_index].archers[archer_index].seedingScore.overallScore = overallScore\r\n            universities[uni_index].archers[archer_index].seedingScore.hits = hits\r\n            universities[uni_index].archers[archer_index].seedingScore.numXs = numXs\r\n            universities[uni_index].archers[archer_index].seedingScore.num10s = num10s\r\n            universities[uni_index].archers[archer_index].seedingScore.num9s = num9s\r\n            universities[uni_index].archers[archer_index].seedingScore.num8s = num8s\r\n            universities[uni_index].archers[archer_index].seedingScore.num7s = num7s\r\n            universities[uni_index].archers[archer_index].seedingScore.num6s = num6s\r\n            universities[uni_index].archers[archer_index].seedingScore.num5s = num5s\r\n            universities[uni_index].archers[archer_index].seedingScore.num4s = num4s\r\n            universities[uni_index].archers[archer_index].seedingScore.num3s = num3s\r\n            universities[uni_index].archers[archer_index].seedingScore.num2s = num2s\r\n            universities[uni_index].archers[archer_index].seedingScore.num1s = num1s\r\n\r\n            archerScores.push(\r\n                {\r\n                    id: archer.id,\r\n                    rankingScore: archer.rankingScore\r\n                }\r\n            )\r\n        })\r\n    })\r\n    return universities\r\n}\r\n\r\nexport function calculateUniversityScores(universities) {\r\n    universities.map((university, index) => {\r\n        universities[index].teamSeedingScore.overallScore = university.archers[0].seedingScore.overallScore + university.archers[1].seedingScore.overallScore + university.archers[2].seedingScore.overallScore\r\n        universities[index].teamSeedingScore.overallHits = university.archers[0].seedingScore.hits + university.archers[1].seedingScore.hits + university.archers[2].seedingScore.hits\r\n        universities[index].teamSeedingScore.overallXs = university.archers[0].seedingScore.numXs + university.archers[1].seedingScore.numXs + university.archers[2].seedingScore.numXs\r\n        universities[index].teamSeedingScore.overallRankingScore = university.archers[0].seedingScore.rankingScore + university.archers[1].seedingScore.rankingScore + university.archers[2].seedingScore.rankingScore\r\n\r\n    })\r\n    return universities\r\n}\r\n\r\nexport function rankUniversities(universities) {\r\n\r\n    universities = universities.sort(function (a, b) { return b.teamSeedingScore.overallRankingScore - a.teamSeedingScore.overallRankingScore })\r\n\r\n    universities.map((university, index) => {\r\n        universities[index].teamSeedingScore.overallRank = index + 1\r\n    })\r\n    return universities\r\n}\r\n\r\nexport function rank_archers(universities) {\r\n    var archerScores = []\r\n    console.log(universities)\r\n    universities.map((university) => {\r\n        university.archers.map((archer, index) => {\r\n            archerScores.push(\r\n                {\r\n                    id: archer.id,\r\n                    rankingScore: archer.seedingScore.rankingScore,\r\n                    seedingScore: archer.seedingScore,\r\n                    first_name: archer.first_name,\r\n                    surname: archer.surname,\r\n                    rank: index\r\n                }\r\n            )\r\n        })\r\n    })\r\n\r\n    console.log(archerScores)\r\n    archerScores = archerScores.sort(function (a, b) { return b.rankingScore - a.rankingScore })\r\n\r\n    archerScores.map((archer, index) => {\r\n        archerScores[index].rank = index + 1\r\n        // universities\r\n    })\r\n    return archerScores\r\n\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport initialState from '../initial_data/iniitalState';\r\nimport { calculateScores, rank_archers } from './reducer_logic/seedingScoring';\r\nimport { calculateH2HScores } from './reducer_logic/h2h_logic';\r\n\r\nfunction addUniversity(state, action) {\r\n  var new_university_id = state.last_university_id + 1;\r\n  return {\r\n    ...state,\r\n    universities:\r\n      state.universities.concat(\r\n        {\r\n          id: state.new_university_id,\r\n          name: action.data.name,\r\n          archers: action.data.archers,\r\n          target: action.data.target\r\n        }),\r\n    last_university_id: new_university_id\r\n  };\r\n}\r\n\r\nfunction updateUniversity(state, action) {\r\n  console.log('inside UPDATE_UNIVERSITY');\r\n  console.log(action.data);\r\n  console.log(Object.keys(action.data));\r\n  const universities = [...state.universities];\r\n  const action_keys = Object.keys(action.data);\r\n  state.universities.map((university, index) => {\r\n    if (university.id === action.data.id) {\r\n      action_keys.map((key) => {\r\n        universities[index][key] = action.data[key];\r\n      });\r\n      \r\n    }\r\n  });\r\n  return {\r\n    ...state,\r\n    universities: universities\r\n  };\r\n}\r\n\r\nfunction updateScores(state, action) {\r\n  console.log('inside UPDATE_SC ORE');\r\n  // Find which archer the score applies to and update arrows accordingly\r\n  // Then recalculate hits, ranking, total and numXs etc.\r\n\r\n  const universities = [...state.universities];\r\n\r\n  console.log(action);\r\n  state.universities.map((university, uni_index) => {\r\n    university.archers.map((archer, archer_index) => {\r\n      if (archer.id === action.data.archer.id && archer.first_name === action.data.archer.first_name && archer.surname === action.data.archer.surname) {\r\n        universities[uni_index].archers[archer_index] = action.data.archer;\r\n      }\r\n    });\r\n  });\r\n  return {\r\n    ...state,\r\n    universities: calculateScores(universities),\r\n    archerScores: rank_archers(universities)\r\n  };\r\n}\r\n\r\nfunction updateH2HRound(state, action) {\r\n  console.log('updating H2H round');\r\n  console.log(action);\r\n  console.log(state);\r\n  const universities = [...state.universities];\r\n  // add h2h score entry to correct university\r\n  state.universities.map((university, index) => {\r\n    if (university.id === action.data.university.id && university.name === action.data.university.name) {\r\n      universities[index].h2hScoring[action.data.round].ends = action.data.ends;\r\n      universities[index].h2hScoring[action.data.round].shootOff = action.data.shootOff;\r\n    }\r\n  });\r\n  // call calculateScores\r\n  return {\r\n    ...state,\r\n    universities: calculateH2HScores(universities, action.data.round)\r\n  };\r\n}\r\n\r\n// -------------------- DB LOGIC ---------------------------\r\n\r\nfunction returnUniversitiesState(state, action) {\r\n  console.log('returning state');\r\n  console.log(action);\r\n  return {\r\n    ...state,\r\n    universities: action.data,\r\n    error: false\r\n  };\r\n}\r\n\r\nfunction returnUniversityScoreList(state, action) {\r\n  console.log('returning state');\r\n  console.log(action);\r\n  return {\r\n    ...state,\r\n    universityScoreList: action.data,\r\n    error: false\r\n  };\r\n}\r\n\r\nfunction returnIndividualScoreList(state, action) {\r\n  console.log('returning state');\r\n  console.log(action);\r\n  return {\r\n    ...state,\r\n    individualScoreList: action.data,\r\n    error: false\r\n  };\r\n}\r\n\r\n// ----------------------REDUCER -----------------------------\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_UNIVERSITY:\r\n      return addUniversity(state, action);\r\n\r\n    case actionTypes.UPDATE_UNIVERSITY:\r\n      return updateUniversity(state, action);\r\n\r\n    case actionTypes.UPDATE_SCORE:\r\n      return updateScores(state, action);\r\n\r\n    case actionTypes.UPDATE_H2H_ROUND:\r\n      return updateH2HRound(state, action);\r\n\r\n    case actionTypes.GET_UNIVERSITIES:\r\n      return returnUniversitiesState(state, action);\r\n\r\n    case actionTypes.SAVE_UNIVERSITIES:\r\n      return returnUniversitiesState(state, action);\r\n\r\n    case actionTypes.GET_UNIVERSITY_SCORE_LIST:\r\n      return returnUniversityScoreList(state, action);\r\n\r\n    case actionTypes.GET_INDIVIDUAL_SCORE_LIST:\r\n      return returnIndividualScoreList(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default reducer;","export const GET_UNIVERSITIES = 'SET_DATA';\r\nexport const FAILED_DATA_FETCH = 'FAILED_DATA_FETCH';\r\nexport const SAVE_UNIVERSITIES = 'SAVE_UNIVERSITIES';\r\n\r\nexport const ADD_UNIVERSITY = 'ADD_UNIVERSITY';\r\nexport const REMOVE_UNIVERSITY = 'REMOVE_UNIVERSITY';\r\nexport const UPDATE_UNIVERSITY = 'UPDATE_UNIVERSITY';\r\nexport const UPDATE_SCORE = 'UPDATE_SCORE';\r\nexport const UPDATE_H2H_ROUND = 'UPDATE_H2H_ROUND';\r\n\r\nexport const GET_UNIVERSITY_SCORE_LIST = 'GET_UNIVERSITY_SCORE_LIST';\r\nexport const GET_INDIVIDUAL_SCORE_LIST = 'GET_INDIVIDUAL_SCORE_LIST';","import React from 'react';\r\nimport {Table} from 'semantic-ui-react';\r\n\r\n\r\nclass EditableUniversityList extends React.Component {\r\n  render() {\r\n    if (this.props.universities === null) {\r\n      return (\r\n        <div>\r\n          <Table className='ui celled unstackable table'>\r\n          <Table.Header>\r\n              <Table.HeaderCell>University</Table.HeaderCell>\r\n              <Table.HeaderCell>First Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Gender</Table.HeaderCell>\r\n              <Table.HeaderCell>Experience</Table.HeaderCell>\r\n          </Table.Header>\r\n          <Table.Body>\r\n              <Table.Row>\r\n                  <td>Waiting to recieve data</td>\r\n              </Table.Row>                    \r\n          </Table.Body>\r\n         </Table>\r\n        </div>\r\n      )\r\n    } else {\r\n      const universities = this.props.universities.map((university, index) => \r\n        <tr>\r\n          \r\n            <Table.Cell>{university.name}</Table.Cell>                    \r\n            <Table.Cell data-label=\"FirstName\">\r\n              {university.archers[0].first_name} <br/>\r\n              {university.archers[1].first_name} <br/>\r\n              {university.archers[2].first_name} <br/>\r\n            </Table.Cell>\r\n            <Table.Cell data-label=\"LastName\">\r\n              {university.archers[0].surname} <br/>\r\n              {university.archers[1].surname} <br/>\r\n              {university.archers[2].surname} <br/>\r\n            </Table.Cell>\r\n            <Table.Cell data-label=\"Gender\">\r\n              {university.archers[0].gender} <br/>\r\n              {university.archers[1].gender} <br/>\r\n              {university.archers[2].gender} <br/>\r\n            </Table.Cell>\r\n            <Table.Cell data-label=\"Experience\">\r\n              {university.archers[0].experience} <br/>\r\n              {university.archers[1].experience} <br/>\r\n              {university.archers[2].experience} <br/>\r\n            </Table.Cell>\r\n        </tr>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1 className='ui center aligned'>Registered Teams</h1>\r\n        <Table className='celled unstackable table'>\r\n          <Table.Header>\r\n              <Table.HeaderCell>University</Table.HeaderCell>\r\n              <Table.HeaderCell>First Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Gender</Table.HeaderCell>\r\n              <Table.HeaderCell>Experience</Table.HeaderCell>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {universities}\r\n          </Table.Body>\r\n          </Table>\r\n      </div>\r\n    );\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditableUniversityList;","import * as actionTypes from './actionTypes';\r\nimport { TIMEOUT_VALUE } from '../../settings';\r\n\r\n\r\n// ---------------------- Database Logic ------------------------\r\nexport const getData = (data) => {\r\n    console.log('Setting Data from Firebase');\r\n    return {\r\n        type: actionTypes.GET_UNIVERSITIES,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const getUniversityScoreList = (data) => {\r\n    return {\r\n        type: actionTypes.GET_UNIVERSITY_SCORE_LIST,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const getIndividualScoreList = (data) => {\r\n    return {\r\n        type: actionTypes.GET_INDIVIDUAL_SCORE_LIST,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const saveUniversities = (data) => {\r\n    console.log('saving universities');\r\n    console.log(data);\r\n    return {\r\n        type: actionTypes.SAVE_UNIVERSITIES,\r\n        data: data\r\n    };\r\n};\r\n\r\n\r\nexport const failedDataFetch = () => {\r\n    return {\r\n        type: actionTypes.FAILED_DATA_FETCH\r\n    };\r\n};\r\n\r\n// -------------------------  Core Logic --------------------\r\n\r\n\r\nconst saveResult = (action_type, res) => {\r\n    return {\r\n        type: action_type,\r\n        data: res\r\n    };\r\n};\r\n\r\n\r\nexport const add_university = (res) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(saveResult(actionTypes.ADD_UNIVERSITY, res));\r\n        }, TIMEOUT_VALUE);\r\n    };\r\n};\r\n\r\nexport const remove_university = (res) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(saveResult(actionTypes.REMOVE_UNIVERSITY, res));\r\n        }, TIMEOUT_VALUE);\r\n    };\r\n};\r\n\r\nexport const update_university = (res) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(saveResult(actionTypes.UPDATE_UNIVERSITY, res));\r\n        }, TIMEOUT_VALUE);\r\n    };\r\n};\r\n\r\nexport const update_score = (res) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(saveResult(actionTypes.UPDATE_SCORE, res));\r\n        }, TIMEOUT_VALUE);\r\n    };\r\n\r\n};\r\n\r\nexport const update_h2h_round = (res) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(saveResult(actionTypes.UPDATE_H2H_ROUND, res));\r\n        }, TIMEOUT_VALUE);\r\n    };\r\n};","import {getData, getUniversityScoreList, getIndividualScoreList} from './actions/actions';\r\nimport _ from 'lodash';\r\n\r\n//butc copy spreadsheet\r\nconst API = 'https://sheets.googleapis.com/v4/spreadsheets/1uFI-7nYfe8OobXjuuHCYFC5wf9-cQsjDUwrMLvQyi-w/values:batchGet?majorDimension=COLUMNS&ranges=Universities&key=AIzaSyDGfidY0fI_gQs6o2HhrgXjC6RkBi8aj9w';\r\n\r\n\r\nexport const initialiseUniversities = () => {\r\n    return dispatch => {\r\n         \r\n     fetch(API).then(response => response.json()).then(data => {\r\n        console.log('fetching results');\r\n\r\n        var batchColumnValues = data.valueRanges[0].values[0];       \r\n        console.log(batchColumnValues[0]);\r\n        var universities = [];\r\n      \r\n        batchColumnValues.map((university) => {\r\n            var parsed_university = JSON.parse(university)\r\n            var validated_university = JSON.parse(university)\r\n            parsed_university.archers.map((archer, archer_index) => {\r\n              Object.keys(archer.seedingScore.arrows).map((end_key, end_index) => {\r\n                archer.seedingScore.arrows[end_key].map((arrow, arrow_index) => {\r\n                  if (arrow === 12) {\r\n                    validated_university.archers[archer_index].seedingScore.arrows[end_key][arrow_index] = 'M'\r\n                  } else if (arrow === 11) {\r\n                    validated_university.archers[archer_index].seedingScore.arrows[end_key][arrow_index] = 'X'\r\n                  }\r\n                });\r\n              });\r\n            });\r\n            universities.push(validated_university);\r\n        });\r\n\r\n        console.log('universities');\r\n        console.log(universities);\r\n\r\n        dispatch(getData(universities));\r\n      });\r\n    };\r\n};\r\n\r\n\r\nexport const initialiseUniversityScoreList = () => {\r\n  return dispatch => {\r\n       \r\n   fetch(API).then(response => response.json()).then(data => {\r\n      console.log('fetching results');\r\n\r\n      var batchColumnValues = data.valueRanges[0].values[0];       \r\n      console.log(batchColumnValues[0]);\r\n      var universities = [];\r\n    \r\n      var parsed_university = null;\r\n      batchColumnValues.map((university) => {\r\n          parsed_university = JSON.parse(university);\r\n            universities.push({\r\n                name:parsed_university.name, \r\n                rank: parsed_university.teamSeedingScore.overallRank, \r\n                score:parsed_university.teamSeedingScore.overallScore, \r\n                hits: parsed_university.teamSeedingScore.overallHits,\r\n                golds: parsed_university.teamSeedingScore.overallXs\r\n            });\r\n\r\n      });\r\n\r\n      universities = _.sortBy(universities, ['rank']);\r\n      console.log('university score list');\r\n      console.log(universities);\r\n\r\n      dispatch(getUniversityScoreList(universities));\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const initialiseIndividualScoreList = () => {\r\n  return dispatch => {\r\n       \r\n   fetch(API).then(response => response.json()).then(data => {\r\n    console.log('fetching results');\r\n\r\n    var batchColumnValues = data.valueRanges[0].values[0];       \r\n    console.log(batchColumnValues[0]);\r\n    var archers = [];\r\n  \r\n    var parsed_university = null;\r\n    batchColumnValues.map((university) => {\r\n        parsed_university = JSON.parse(university);\r\n        var parsed_university_archers = parsed_university.archers;\r\n\r\n        parsed_university_archers.map((archer, index) => {\r\n          archers.push({\r\n            team: parsed_university.name,\r\n            first_name:archer.first_name, \r\n            surname:archer.surname, \r\n            rank: archer.seedingScore.overallRank, \r\n            score:archer.seedingScore.overallScore, \r\n            hits: archer.seedingScore.Hits,\r\n            golds: archer.seedingScore.numXs\r\n          });\r\n        });\r\n      });\r\n\r\n    archers = _.sortBy(archers, ['rank']);\r\n\r\n    dispatch(getIndividualScoreList(archers));\r\n    });\r\n  };\r\n};","import React from 'react';\r\nimport EditableUniversityList from './university/EditableUniversityList';\r\nimport { connect } from 'react-redux';\r\nimport { add_university, update_university} from '../../store/actions/actions';\r\nimport {initialiseUniversities} from '../../store/database_logic';\r\n\r\nclass UniversityDashboard extends React.Component {\r\n  state = {\r\n    universities: this.props.universities,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onInitialiseUniversities();\r\n    console.log('props');\r\n    console.log(this.props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='TargetList'>\r\n\r\n        <EditableUniversityList\r\n            universities={this.props.universities}\r\n            onFormSubmit={this.handleEditFormSubmit}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    universities: state.uni.universities\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUniAdded: (uni) => dispatch(add_university(uni)),\r\n    onUniEdited: (uni) => dispatch(update_university(uni)),\r\n    onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UniversityDashboard);","export const TIMEOUT_VALUE = 2000;\r\n\r\n","import React from 'react';\r\nimport {Table, Tab} from 'semantic-ui-react';\r\n\r\nclass EditableTargetList extends React.Component {\r\n    render() {\r\n        console.log('EditableTargetList');\r\n        console.log(this.props);\r\n        if (this.props.universities === null) {\r\n            return (\r\n\r\n            <div>\r\n                <Table  className='ui celled unstackable table'>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell>Target</Table.HeaderCell>\r\n                        <Table.HeaderCell>Team</Table.HeaderCell>\r\n                        <Table.HeaderCell>Left (A/C)</Table.HeaderCell>\r\n                        <Table.HeaderCell>Middle (B/E)</Table.HeaderCell>\r\n                        <Table.HeaderCell>Right (C/F)</Table.HeaderCell>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        <Table.Row>Waiting to recieve data</Table.Row>\r\n                    </Table.Body>\r\n                </Table>\r\n                \r\n            </div>\r\n            );\r\n          } else {\r\n        const universities = this.props.universities.map((university, index) => \r\n            <tr>\r\n                <Table.Cell>{university.target.number} ({university.target.position})</Table.Cell>\r\n                <Table.Cell>{university.name}</Table.Cell>\r\n                <Table.Cell>{university.archers[0].first_name} {university.archers[0].surname}</Table.Cell>\r\n                <Table.Cell>{university.archers[1].first_name} {university.archers[1].surname}</Table.Cell>\r\n                <Table.Cell>{university.archers[2].first_name} {university.archers[2].surname}</Table.Cell>\r\n            </tr>\r\n        );\r\n        return (\r\n            <div>\r\n                <Table  className='ui celled unstackable table'>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell>Target</Table.HeaderCell>\r\n                        <Table.HeaderCell>Team</Table.HeaderCell>\r\n                        <Table.HeaderCell>Left (A/C)</Table.HeaderCell>\r\n                        <Table.HeaderCell>Middle (B/E)</Table.HeaderCell>\r\n                        <Table.HeaderCell>Right (C/F)</Table.HeaderCell>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {universities}\r\n                    </Table.Body>\r\n                </Table>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n}\r\n\r\nexport default EditableTargetList;","import React from 'react';\r\nimport EditableTargetList from './EditableTargetList';\r\nimport { connect } from 'react-redux';\r\nimport { initialiseUniversities } from '../../store/database_logic';\r\n\r\nvar _ = require('lodash');\r\n\r\n\r\nclass TargetListDashboard extends React.Component {\r\n\r\n    state = {\r\n        targets: this.props.targets,\r\n        universities: []\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n        this.setState({ universities: this.props.universities });\r\n    }\r\n\r\n\r\n    handleRandomNumberGeneration = () => {\r\n        var array_len = this.props.universities.length;\r\n        var new_universities = [...this.props.universities];\r\n\r\n        var target_numbers = [];\r\n\r\n        while (array_len) {\r\n            var i = _.random(0, array_len - 1);\r\n\r\n            while (target_numbers.includes(i)) {\r\n                i = _.random(0, array_len);\r\n            }\r\n            target_numbers.push(i);\r\n            array_len = array_len - 1;\r\n        }\r\n\r\n        for (i = 0; i < new_universities.length; i++) {\r\n            new_universities[i].target = this.state.targets[target_numbers[i]];\r\n        }\r\n        this.setState({ universities: new_universities });\r\n\r\n    }\r\n\r\n\r\n    handleEditFormSubmit = (attrs) => {\r\n        this.props.onUniEdited(attrs);\r\n        this.setState({universities:this.props.universities});\r\n        this.props.onSaveUniversities(this.props);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='TargetList'>\r\n                <h1>Seeding Round Target List</h1>\r\n                <EditableTargetList\r\n                    universities={this.props.universities}\r\n                    targets={this.props.targets}\r\n                    onFormSubmit={this.handleEditFormSubmit}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities,\r\n        targets: state.uni.targets\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TargetListDashboard);","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { initialiseUniversityScoreList } from '../../../store/database_logic';\r\n\r\nclass UniversityScores extends React.Component {\r\n      componentDidMount(){\r\n        console.log('inside componentdidmount');\r\n        this.props.onInitialiseUniversities();\r\n      }\r\n\r\n\r\n    render() {\r\n        if (this.props.universityScoreList === null) {\r\n            return (\r\n                <div>\r\n                    <Table className='ui celled unstackable table'>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                        <Table.HeaderCell>Team</Table.HeaderCell>\r\n                        <Table.HeaderCell>Score</Table.HeaderCell>\r\n                        <Table.HeaderCell>Hits</Table.HeaderCell>\r\n                        <Table.HeaderCell>Golds</Table.HeaderCell>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                            <td>Waiting to recieve data</td>\r\n                        </Table.Row>                    \r\n                    </Table.Body>\r\n                </Table>\r\n                </div>\r\n            );\r\n        } else {\r\n        const university_rows = this.props.universityScoreList.map((university) => \r\n            <tr>\r\n                <td data-label='Rank'>{university.rank}</td>\r\n                <td data-label='Name'>{university.name}</td>\r\n                <td data-label='Score'>{university.score}</td>\r\n                <td data-label='Hits'>{university.hits}</td>\r\n                <td data-label='Golds'>{university.golds}</td>\r\n            </tr>\r\n        );\r\n        return (\r\n            <div className='TargetList'>\r\n                <h1 className='ui center aligned'>Team Rankings</h1>\r\n                <Table className='ui celled unstackable table'>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                        <Table.HeaderCell>Team</Table.HeaderCell>\r\n                        <Table.HeaderCell>Score</Table.HeaderCell>\r\n                        <Table.HeaderCell>Hits</Table.HeaderCell>\r\n                        <Table.HeaderCell>Golds</Table.HeaderCell>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {university_rows}\r\n                    </Table.Body>\r\n                </Table>\r\n            </div >\r\n        );\r\n    } \r\n}\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universityScoreList: state.uni.universityScoreList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversityScoreList())\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UniversityScores);","import React from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport { initialiseIndividualScoreList } from '../../../store/database_logic';\r\n\r\nclass IndividualScores extends React.Component {\r\n    componentDidMount(){\r\n        console.log('inside componentdidmount');\r\n        this.props.onInitialiseUniversities();\r\n\r\n        // setInterval(function(){\r\n        //     this.props.onInitialiseUniversities();\r\n        // }.bind(this), 10);\r\n    }\r\n   \r\n\r\n    render() {\r\n        if (this.props.individualScoreList === null) {\r\n            var archers = 'No scores have been submitted yet';\r\n        } else {\r\n            archers = this.props.individualScoreList.map((archer, index) => \r\n                <tr>\r\n                    <td data-label='Rank'>{archer.rank}</td>\r\n                    <td data-label='Name'>{archer.first_name} {archer.surname}</td>\r\n                    <td data-label='Total'>{archer.score}</td>\r\n                    <td data-label='Hits'>{archer.hits}</td>\r\n                    <td data-label='Golds'>{archer.golds}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        console.log(archers);\r\n        return (\r\n            <div className='TargetList'>\r\n                <h1 className='ui center aligned'>Individual Rankings</h1>\r\n                <Table className='ui celled unstackable table'>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell>Rank</Table.HeaderCell>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Score</Table.HeaderCell>\r\n                        <Table.HeaderCell>Hits</Table.HeaderCell>\r\n                        <Table.HeaderCell>Golds</Table.HeaderCell>\r\n                    </Table.Header>\r\n                    <tbody>\r\n                        {archers}\r\n                    </tbody>\r\n                </Table>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        individualScoreList: state.uni.individualScoreList\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseIndividualScoreList())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IndividualScores);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetR1A extends React.Component {\r\n    state = {\r\n        current_round: 'R1A',\r\n        round_description: 'Round 1 A',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetR1A);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetR1B extends React.Component {\r\n    state = {\r\n        current_round: 'R1B',\r\n        round_description: 'Round 1 B',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetR1B);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetR2 extends React.Component {\r\n    state = {\r\n        current_round: 'R2',\r\n        round_description: 'Round 2',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetR2);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetQF extends React.Component {\r\n    state = {\r\n        current_round: 'QF',\r\n        round_description: 'Quarter Finals',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetQF);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetSF extends React.Component {\r\n    state = {\r\n        current_round: 'SF',\r\n        round_description: 'Semi Finals',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetSF);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetMB extends React.Component {\r\n    state = {\r\n        current_round: 'MB',\r\n        round_description: 'Bronze Medal Match',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetMB);","import React from 'react';\r\n\r\nimport { Table } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HTargetsMG extends React.Component {\r\n    state = {\r\n        current_round: 'MG',\r\n        round_description: 'Gold Medal Match',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        console.log('Changing displayed round to ' + round);\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for target lists</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) => \r\n                <tr>\r\n                    <td data-label='Target'>{university.target}</td>\r\n                    <td data-label='Name'>{university.name}</td>\r\n                </tr>\r\n            );\r\n    \r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Target List for {this.state.round_description}</h1>\r\n                    <Table className='ui celled unstackable table'>\r\n                        <thead>\r\n                            <th>Target</th>\r\n                            <th>University</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            {universityTargets}\r\n                        </tbody>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HTargetsMG);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewR1A extends React.Component {\r\n    state = {\r\n        current_round: 'R1A',\r\n        round_description: 'Round 1 A',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewR1A);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewR1B extends React.Component {\r\n    state = {\r\n        current_round: 'R1B',\r\n        round_description: 'Round 1 B',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewR1B);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewR2 extends React.Component {\r\n    state = {\r\n        current_round: 'R2',\r\n        round_description: 'Round 2',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewR2);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewQF extends React.Component {\r\n    state = {\r\n        current_round: 'QF',\r\n        round_description: 'Quarter Finals',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewQF);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewSF extends React.Component {\r\n    state = {\r\n        current_round: 'SF',\r\n        round_description: 'Semi Finals',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewSF);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewMB extends React.Component {\r\n    state = {\r\n        current_round: 'MB',\r\n        round_description: 'Bronze Medal Match',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewMB);","import React from 'react';\r\n\r\nimport { Table, Button } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport {initialiseUniversities} from '../../../store/database_logic';\r\n\r\nclass H2HScoreViewMG extends React.Component {\r\n    state = {\r\n        current_round: 'MG',\r\n        round_description: 'Gold Medal Match',\r\n        round_mapping: {\r\n            R1A: 'Round 1 A',\r\n            R1B: 'Round 1 B',\r\n            R2: 'Round 2',\r\n            QF: 'Quarter Finals',\r\n            SF: 'Semi Finals',\r\n            MB: 'Bronze Medal Match',\r\n            MG: 'Gold Medal Match'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitialiseUniversities();\r\n    }\r\n\r\n    handleRoundChange = (round) => {\r\n        this.setState({\r\n            current_round: round,\r\n            round_description: this.state.round_mapping[round]\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.universities === null){\r\n            return(\r\n                <div>\r\n                    <p>Waiting for scores</p>\r\n                </div>\r\n            );\r\n            } else {\r\n            var universities = [];\r\n            this.props.universities.map((university) => {\r\n                if (this.state.current_round === 'R1A') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'A') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }  \r\n                } else if (this.state.current_round === 'R1B') {\r\n                    if (university.h2hScoring.R1 !== null ) {\r\n                        if (university.h2hScoring.R1.target.round === 'B') {\r\n                            try {\r\n                                universities.push(\r\n                                    {\r\n                                        target: university.h2hScoring.R1.target.number,\r\n                                        name: university.name,\r\n                                        ends: university.h2hScoring.R1.ends,\r\n                                        shootOff: university.h2hScoring.R1.shootOff,\r\n                                        total: university.h2hScoring.R1.totalScore\r\n                                    });\r\n                            } catch (e) {\r\n                                console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    try {\r\n                        if(university.h2hScoring[this.state.current_round].target !== null) {\r\n                            universities.push(\r\n                                {\r\n                                    target: university.h2hScoring[this.state.current_round].target,\r\n                                    name: university.name,\r\n                                    ends: university.h2hScoring[this.state.current_round].ends,\r\n                                    shootOff: university.h2hScoring[this.state.current_round].shootOff,\r\n                                    total: university.h2hScoring[this.state.current_round].totalScore\r\n                                });\r\n                        }\r\n    \r\n                    } catch (e) {\r\n                        console.log('university ' + university.name + ' not found in round ' + this.state.current_round);\r\n                    }\r\n                }\r\n            });\r\n    \r\n            universities = _.sortBy(universities, ['target']);\r\n    \r\n            const universityTargets = universities.map((university) =>                 \r\n                <Table.Row>\r\n                    <Table.Cell data-label='Target'>{university.target}</Table.Cell>\r\n                    <Table.Cell data-label='Name'>{university.name}</Table.Cell>\r\n                    <Table.Cell data-label='End1'>{university.ends[0]}</Table.Cell>\r\n                    <Table.Cell data-label='End2'>{university.ends[1]}</Table.Cell>\r\n                    <Table.Cell data-label='End3'>{university.ends[2]}</Table.Cell>\r\n                    <Table.Cell data-label='End4'>{university.ends[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff1'>{university.shootOff[0]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff2'>{university.shootOff[1]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff3'>{university.shootOff[2]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff4'>{university.shootOff[3]}</Table.Cell>\r\n                    <Table.Cell data-label='ShootOff5'>{university.shootOff[4]}</Table.Cell>\r\n                    <Table.Cell data-label='TotalScore'>{university.total}</Table.Cell>\r\n\r\n                </Table.Row>\r\n            );\r\n    \r\n            console.log(universities);\r\n            return (\r\n                <div className='TargetList'>\r\n                    <h1 className='ui center aligned'>Head to Head Scores for {this.state.round_description}</h1>\r\n                    <Table className='celled unstackable table'>\r\n                        <Table.Header>\r\n                            <Table.HeaderCell>Target</Table.HeaderCell>\r\n                            <Table.HeaderCell>University</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='4'>Ends</Table.HeaderCell>\r\n                            <Table.HeaderCell colSpan='5'>shootOff</Table.HeaderCell>\r\n                            <Table.HeaderCell>Total</Table.HeaderCell>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {universityTargets}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div >\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        universities: state.uni.universities\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitialiseUniversities: () => dispatch(initialiseUniversities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(H2HScoreViewMG);","import React from 'react';\r\nimport logo from '../assets/BUTC_Logo.svg';\r\n\r\n\r\nclass Homepage extends React.Component {\r\n\r\nrender() {\r\n    const date = new Date()\r\n    const year= date.getFullYear();\r\nreturn(\r\n    <div>\r\n        <h1>Welcome to BUTC {year}</h1>\r\n        <p/>\r\n        <img src={logo} className=\"butc_logo\" alt=\"logo\" />\r\n        <p />\r\n        <p>Please note these pages automatically refresh every 5 seconds</p>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\n}\r\nexport default Homepage;","import React from 'react';\r\nimport { Menu, Dropdown } from 'semantic-ui-react';\r\nimport logo from '../../assets/BUTC_Logo.svg';\r\nimport { NavLink, Switch, Route } from 'react-router-dom';\r\nimport UniversityDashboard from '../universities/UniversityDashboard';\r\nimport TargetListDashboard from '../TargetLists/TargetListDashboard';\r\nimport UniversityScores from '../seedingScoring/scoringViews/universityScores';\r\nimport IndividualScores from '../seedingScoring/scoringViews/individualScores';\r\nimport H2HTargetsR1A from '../H2H//target_lists/h2hTargetsR1A';\r\nimport H2HTargetsR1B from '../H2H//target_lists/h2hTargetsR1B';\r\nimport H2HTargetsR2 from '../H2H//target_lists/h2hTargetsR2';\r\nimport H2HTargetsQF from '../H2H//target_lists/h2hTargetsQF';\r\nimport H2HTargetsSF from '../H2H//target_lists/h2hTargetsSF';\r\nimport H2HTargetsMB from '../H2H//target_lists/h2hTargetsMB';\r\nimport H2HTargetsMG from '../H2H//target_lists/h2hTargetsMG';\r\nimport H2hScoreViewR1A from '../H2H/score_views/h2hScoreViewR1A';\r\nimport H2hScoreViewR1B from '../H2H/score_views/h2hScoreViewR1B';\r\nimport H2hScoreViewR2 from '../H2H/score_views/h2hScoreViewR2';\r\nimport H2hScoreViewQF from '../H2H/score_views/h2hScoreViewQF';\r\nimport H2hScoreViewSF from '../H2H/score_views/h2hScoreViewSF';\r\nimport H2hScoreViewMB from '../H2H/score_views/h2hScoreViewMB';\r\nimport H2hScoreViewMG from '../H2H/score_views/h2hScoreViewMG';\r\nimport Homepage from '../homepage';\r\n\r\nclass NavBar extends React.Component {\r\n    state = {\r\n        activeItem: 'home'\r\n    }\r\n    render() {\r\n        const { activeItem } = this.state.activeItem;\r\n        const homepage = () => {return <Homepage />};\r\n        const universityDashboard = () => { return <UniversityDashboard />; };\r\n        const targetDashboard = () => { return <TargetListDashboard />; };\r\n        const universityScores = () => { return <UniversityScores />; };\r\n        const individualScores = () => { return <IndividualScores />; };\r\n        const h2hTargetsR1A = () => { return <H2HTargetsR1A />; };\r\n        const h2hTargetsR1B = () => { return <H2HTargetsR1B />; };\r\n        const h2hTargetsR2 = () => { return <H2HTargetsR2 />; };\r\n        const h2hTargetsQF = () => { return <H2HTargetsQF />; };\r\n        const h2hTargetsSF = () => { return <H2HTargetsSF />; };\r\n        const h2hTargetsMB = () => { return <H2HTargetsMB />; };\r\n        const h2hTargetsMG = () => { return <H2HTargetsMG />; };\r\n        const h2hScoreViewR1A = () => { return <H2hScoreViewR1A />; };\r\n        const h2hScoreViewR1B = () => { return <H2hScoreViewR1B />; };\r\n        const h2hScoreViewR2 = () => { return <H2hScoreViewR2 />; };\r\n        const h2hScoreViewQF = () => { return <H2hScoreViewQF />; };\r\n        const h2hScoreViewSF = () => { return <H2hScoreViewSF />; };\r\n        const h2hScoreViewMB = () => { return <H2hScoreViewMB />; };\r\n        const h2hScoreViewMG = () => { return <H2hScoreViewMG />; };\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Menu size='mini'>\r\n                    <Menu.Item\r\n                        name='homepage'\r\n                        active={activeItem === 'Homepage'}\r\n                        onClick={this.handleItemClick}\r\n                        as={NavLink}\r\n                        to='/'\r\n                        \r\n                    ><img src={logo} className=\"App-logo\" alt=\"logo\" /></Menu.Item>\r\n                    {/* /> */}\r\n                    <Menu.Item\r\n                        name='registration'\r\n                        active={activeItem === 'Registration'}\r\n                        onClick={this.handleItemClick}\r\n                        as={NavLink}\r\n                        to='/registration'\r\n                    />\r\n                    <Menu.Item\r\n                        name='targets'\r\n                        active={activeItem === 'targets'}\r\n                        onClick={this.handleItemClick}\r\n                        as={NavLink}\r\n                        to='/targets'\r\n                    />\r\n                    <Dropdown item simple text='Seeding Round'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item\r\n                                text='University Team Scores'\r\n                                name='universityScores'\r\n                                active={activeItem === 'universityScores'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/seeding_uni'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Individual Scores'\r\n                                name='individualScores'\r\n                                active={activeItem === 'individualScores'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/seeding_individual'\r\n                            />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown item simple text='H2H Targets'>\r\n                        <Dropdown.Menu>\r\n\r\n                            <Dropdown.Item\r\n                                text='Round 1A'\r\n                                name='h2h_target_list_R1A'\r\n                                active={activeItem === 'h2hTargetsR1A'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_R1A'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Round 1B'\r\n                                name='h2h_target_list_R1B'\r\n                                active={activeItem === 'h2hTargetsR1B'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_R1B'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Round 2'\r\n                                name='h2h_target_list_R2'\r\n                                active={activeItem === 'h2hTargetsR2'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_R2'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Quarter Finals'\r\n                                name='h2h_target_list_QF'\r\n                                active={activeItem === 'h2hTargetsQF'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_QF'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Semi Finals'\r\n                                name='h2h_target_list_SF'\r\n                                active={activeItem === 'h2hTargetsSF'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_SF'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Bronze Medal Match'\r\n                                name='h2h_target_list_MB'\r\n                                active={activeItem === 'h2hTargetsMB'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_MB'\r\n                            />\r\n                            <Dropdown.Item\r\n                                text='Gold Medal Match'\r\n                                name='h2h_target_list_MG'\r\n                                active={activeItem === 'h2hTargetsMG'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_target_list_MG'\r\n                            />\r\n                          \r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                    <Dropdown item simple text='H2H Scores'>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item\r\n                                text='Round 1A'\r\n                                name='h2h_scores_R1A'\r\n                                active={activeItem === 'h2hScoresR1A'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_R1A'\r\n                            />\r\n                       \r\n                            <Dropdown.Item\r\n                                text='Round 1B'\r\n                                name='h2h_scores_R1B'\r\n                                active={activeItem === 'h2hScoresR1B'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_R1B'\r\n                            />\r\n                      \r\n                            <Dropdown.Item\r\n                                text='Round 2'\r\n                                name='h2h_scores_R2'\r\n                                active={activeItem === 'h2hScoresR2'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_R2'\r\n                            />\r\n                      \r\n                            <Dropdown.Item\r\n                                text='Quarter Finals'\r\n                                name='h2h_scores_QF'\r\n                                active={activeItem === 'h2hScoresQF'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_QF'\r\n                            />\r\n                      \r\n                            <Dropdown.Item\r\n                                text='Semi Finals'\r\n                                name='h2h_scores_SF'\r\n                                active={activeItem === 'h2hScoresSF'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_SF'\r\n                            />\r\n                      \r\n                            <Dropdown.Item\r\n                                text='Bronze Medal Match'\r\n                                name='h2h_scores_MB'\r\n                                active={activeItem === 'h2hScoresMB'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_MB'\r\n                            />\r\n                     \r\n                            <Dropdown.Item\r\n                                text='Gold Medal Match'\r\n                                name='h2h_scores_MG'\r\n                                active={activeItem === 'h2hScoresMG'}\r\n                                onClick={this.handleItemClick}\r\n                                as={NavLink}\r\n                                to='/h2h_scoring_MG'\r\n                            />\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                </Menu>\r\n                <Switch>\r\n                    <Route exact path='/' component={homepage} />\r\n                    <Route path='/registration/' component={universityDashboard} />\r\n                    <Route path='/targets/' component={targetDashboard} />\r\n                    <Route path='/seeding_uni/' component={universityScores} />\r\n                    <Route path='/seeding_individual/' component={individualScores} />\r\n                    <Route path='/h2h_target_list_R1A/' component={h2hTargetsR1A} />\r\n                    <Route path='/h2h_target_list_R1B/' component={h2hTargetsR1B} />\r\n                    <Route path='/h2h_target_list_R2/' component={h2hTargetsR2} />\r\n                    <Route path='/h2h_target_list_QF/' component={h2hTargetsQF} />\r\n                    <Route path='/h2h_target_list_SF/' component={h2hTargetsSF} />\r\n                    <Route path='/h2h_target_list_MB/' component={h2hTargetsMB} />\r\n                    <Route path='/h2h_target_list_MG/' component={h2hTargetsMG} />\r\n                    <Route path='/h2h_scoring_R1A/' component={h2hScoreViewR1A} />\r\n                    <Route path='/h2h_scoring_R1B/' component={h2hScoreViewR1B} />\r\n                    <Route path='/h2h_scoring_R2/' component={h2hScoreViewR2} />\r\n                    <Route path='/h2h_scoring_QF/' component={h2hScoreViewQF} />\r\n                    <Route path='/h2h_scoring_SF/' component={h2hScoreViewSF} />\r\n                    <Route path='/h2h_scoring_MB/' component={h2hScoreViewMB} />\r\n                    <Route path='/h2h_scoring_MG/' component={h2hScoreViewMG} />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport NavBar from './components/Navigation/NavBar';\n\nclass App extends Component {\n  state = {\n    activeItem: 'home',\n    universities: []\n  }\n\n  //logic for automatically refreshing\n  componentDidMount(){\n    console.log('refreshing');\n    setInterval(function(){\n        this.forceUpdate();\n    }.bind(this), 5000);\n}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    return (\n      <HashRouter>\n        <div className='Homepage'>\n          <NavBar />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './semantic/semantic.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/reducer';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n    uni: reducer,\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><App /></Provider >, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/BUTC_Logo.3fe7311f.svg\";"],"sourceRoot":""}